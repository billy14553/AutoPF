function [acc_c,ypred,acc_p] = PLSDA_modeling_evalation(Xtrain,y,LV,Xt,ytest)
%  Input:
%      Xtrain: a predictor matrix  
%      y: response vector
%      LV: number of latent variables
%  Output:


model = plslda

junk = 0;
response = y;
acc_c = -1;
% Train a classifier
% This code specifies all the classifier options and trains the classifier.
%template = templateSVM(...
%    'KernelFunction', 'linear', ...
%    'PolynomialOrder', [], ...
%    'KernelScale', 'auto', ...
%    'BoxConstraint', 1, ...
%    'Standardize', true);
template = templateSVM(...
    'KernelFunction', 'rbf', ...
    'PolynomialOrder', [], ...
    'KernelScale', 18, ...
    'BoxConstraint', 1, ...
    'Standardize', true);
    classificationSVM = fitcecoc(...
    Xtrain, ...
    response, ...
    'Learners', template, ...
    'Coding', 'onevsone');
    yp = predict(classificationSVM, Xt);
    [cm,order] = confusionmat(ytest,yp);
    acc_p = sum(diag(cm))/length(ytest);
    acc_p = 1-acc_p;
    ypred = yp;